// The main window

import { StandardTableView, StandardListView, ListView, Date, LineEdit, ComboBox, TextEdit, Button, StandardButton, Palette, DatePickerPopup } from "std-widgets.slint";

import { DeleteConfirmation } from "./delete_confirmation.slint";
import { HumanResponseView, JobApplicationView } from "./models.slint";
import { Logic } from "./functions.slint";
import { Sidebar } from "components/sidebar.slint";
import { JobApplicationTable } from "components/table.slint";
import { SearchBar } from "components/search_bar.slint";
export { DeleteConfirmation, HumanResponseView, JobApplicationView }

export component AppWindow inherits Window {
    // Callbacks
    callback use-job-application <=> table-view.use-job-application;
    // Re-exported from sidebar
    callback submit-job-application <=> sidebar.submit-job-application;
    callback new-job-application <=> sidebar.new-job-application;
    callback delete-job-application <=> sidebar.delete-job-application;
    // Re-exported from search bar
    callback search-job-application <=> search-bar.search;
    // date-diff(Date, Date) is aliased here do the rust code only needs to access this component for anything related to this component
    // Other components can just bind to Logic.date-diff and it will use the definition here
    pure callback date-diff <=> Logic.date-diff;
    
    // Properties
    // Might need to be in-out if we will store 
    in-out property <[[StandardListViewItem]]> table-rows;
    in-out property <JobApplicationView> selected-job-application;

    // Not sure if this is the best way to re-export a function, but binding like callbacks doesn't seem to work
    public function re-bind-selected() {
        sidebar.re-bind-selected();
    }

    // Properties of the window
    preferred-width: max(
        1024px,
        sidebar.sidebar-min-width + max(search-bar.search-bar-min-width, table-view.table-min-width)
    );
    preferred-height: 512px;
    title: "ATS Tracking System";

    // Sidebar and table
    HorizontalLayout {
        width: 100%;

        // Left sidebar that displays all information about the currently selected element
        sidebar := Sidebar {
            selected-job-application <=> selected-job-application;
        }

        // Table and search bar
        VerticalLayout {
            // The search bar
            search-bar := SearchBar {}

            // The table
            table-view := JobApplicationTable {
                table-rows <=> table-rows;
                re-bind-selected() => { re-bind-selected(); }
            }
        }
    }
}
